ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr()
h5("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
),
mainPanel(
plotOutput("hist")
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr(),
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
),
mainPanel(
plotOutput("hist")
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr(),
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients included in the surveillence",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients detected by the surveillence",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
),
mainPanel(
textOutput("text1")
plotOutput("hist")
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
}),
output$text1 <- renderText({
"You have selected this"
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr(),
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients included in the surveillence",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients detected by the surveillence",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
),
mainPanel(
textOutput("text1"),
plotOutput("hist")
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
}),
output$text1 <- renderText({
"You have selected this"
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr(),
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients included in the surveillence",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients detected by the surveillence",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
),
mainPanel(
textOutput("text1"),
plotOutput("hist")
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
})
output$text1 <- renderText({
"You have selected this"
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr(),
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients included in the surveillence",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients detected by the surveillence",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
),
mainPanel(
textOutput("text1"),
textOupput("text2"),
textOutput("text3"),
plotOutput("hist")
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
})
output$text1 <- renderText({
paste("Based on the data you fed to the model, the estimated incidence rate is","output$incidence",". At this rate, the hospital bears a median total cost of", "output$totalCostSsi","EGP to treat", "output$ssiNo","among","input$noPat","surgical patients admitted to the hospital"
})
output$text2 <- renderText({
paste("If we implement an infection control program with", "input$icEfficacy","at", "output$totCostIc", "EGP,the number of SSI patient that may be avoided is","output$preventedSsiNo","patients. The median total cost (cost of treating","output$newSsiNo"," SSI patients and the cost of ICP)is","output$newTotalCost","EGP","Thus, the median savings may be","output$saving","EGP. In","output$savingPercentage","of the runs, the hospital saves from","min(output$savingPositive)","to","max(output$savingPositive", "due to the implementation of the ICP")
})
output$text <- renderText({
paste("On the other hand, in","100-outpot$savingPercentage", "of the runs, the hosptial may loose from","-1*max(output$savingNegative)","to","-1*min(output$savingNegative")
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr(),
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients included in the surveillence",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients detected by the surveillence",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
),
mainPanel(
textOutput("text1"),
textOupput("text2"),
textOutput("text3"),
plotOutput("hist")
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
})
output$text1 <- renderText({
paste("Based on the data you fed to the model, the estimated incidence rate is","output$incidence",". At this rate, the hospital bears a median total cost of", "output$totalCostSsi","EGP to treat", "output$ssiNo","among","input$noPat","surgical patients admitted to the hospital")
})
output$text2 <- renderText({
paste("If we implement an infection control program with", "input$icEfficacy","at", "output$totCostIc", "EGP,the number of SSI patient that may be avoided is","output$preventedSsiNo","patients. The median total cost (cost of treating","output$newSsiNo"," SSI patients and the cost of ICP)is","output$newTotalCost","EGP","Thus, the median savings may be","output$saving","EGP. In","output$savingPercentage","of the runs, the hospital saves from","min(output$savingPositive)","to","max(output$savingPositive", "due to the implementation of the ICP")
})
output$text3<- renderText({
paste("On the other hand, in","100-outpot$savingPercentage", "of the runs, the hosptial may loose from","-1*max(output$savingNegative)","to","-1*min(output$savingNegative")
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr(),
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients included in the surveillence",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients detected by the surveillence",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
),
mainPanel(
textOutput("text1"),
textOutput("text2"),
textOutput("text3"),
plotOutput("hist")
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
})
output$text1 <- renderText({
paste("Based on the data you fed to the model, the estimated incidence rate is","output$incidence",". At this rate, the hospital bears a median total cost of", "output$totalCostSsi","EGP to treat", "output$ssiNo","among","input$noPat","surgical patients admitted to the hospital")
})
output$text2 <- renderText({
paste("If we implement an infection control program with", "input$icEfficacy","at", "output$totCostIc", "EGP,the number of SSI patient that may be avoided is","output$preventedSsiNo","patients. The median total cost (cost of treating","output$newSsiNo"," SSI patients and the cost of ICP)is","output$newTotalCost","EGP","Thus, the median savings may be","output$saving","EGP. In","output$savingPercentage","of the runs, the hospital saves from","min(output$savingPositive)","to","max(output$savingPositive", "due to the implementation of the ICP")
})
output$text3<- renderText({
paste("On the other hand, in","100-outpot$savingPercentage", "of the runs, the hosptial may loose from","-1*max(output$savingNegative)","to","-1*min(output$savingNegative")
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
fluidRow(
sidebarPanel(
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1),
tags$hr(),
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients included in the surveillence",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients detected by the surveillence",
value = 1),
tags$hr(),
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
tags$hr(),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
)
),
fluidRow(
column(4,textOutput("text1")),
column(4,textOutput("text2")),
column(4,textOutput("text3"))
),
fluidRow(
column(4,plotOutput("hist")),
column(4,textOutput("pie"))
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
})
output$text1 <- renderText({
paste("Based on the data you fed to the model, the estimated incidence rate is","output$incidence",". At this rate, the hospital bears a median total cost of", "output$totalCostSsi","EGP to treat", "output$ssiNo","among","input$noPat","surgical patients admitted to the hospital")
})
output$text2 <- renderText({
paste("If we implement an infection control program with", "input$icEfficacy","at", "output$totCostIc", "EGP,the number of SSI patient that may be avoided is","output$preventedSsiNo","patients. The median total cost (cost of treating","output$newSsiNo"," SSI patients and the cost of ICP)is","output$newTotalCost","EGP","Thus, the median savings may be","output$saving","EGP. In","output$savingPercentage","of the runs, the hospital saves from","min(output$savingPositive)","to","max(output$savingPositive", "due to the implementation of the ICP")
})
output$text3<- renderText({
paste("On the other hand, in","100-outpot$savingPercentage", "of the runs, the hosptial may loose from","-1*max(output$savingNegative)","to","-1*min(output$savingNegative")
})
}
shinyApp(ui = ui, server = server)
# 04-well.R
library(shiny)
ui <- fluidPage(
fluidRow(
column(4,
h4("To compute the incidence rate, enter the following two numbers based on the last surveillence"),
numericInput("den",
label = "Enter the total number of surgical patients included in the surveillence",
value = 1),
numericInput("num",
label = "Enter the number of SSI patients detected by the surveillence",
value = 1)
),
column(4,
numericInput("simNo",
label = "Enter the number of runs",
value = 1),
tags$hr(),
numericInput("noPat",
label = "Enter the number of surgical patients at risk",
value = 1)
),
column(4,
numericInput("costIcPerPatient",
label = "Enter the cost of infection control program per patient",
value = 1),
sliderInput(inputId = "icEfficacy",
label = "Enter the expected efficacy of the infection cotnrol program",
value = 0.2, min = 0, max = 1)
)
),
fluidRow(
column(4,textOutput("text1")),
column(4,textOutput("text2")),
column(4,textOutput("text3"))
),
fluidRow(
column(4,plotOutput("hist")),
column(4,textOutput("pie"))
)
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num), main = input$title)
})
output$text1 <- renderText({
paste("Based on the data you fed to the model, the estimated incidence rate is","output$incidence",". At this rate, the hospital bears a median total cost of", "output$totalCostSsi","EGP to treat", "output$ssiNo","among","input$noPat","surgical patients admitted to the hospital")
})
output$text2 <- renderText({
paste("If we implement an infection control program with", "input$icEfficacy","at", "output$totCostIc", "EGP,the number of SSI patient that may be avoided is","output$preventedSsiNo","patients. The median total cost (cost of treating","output$newSsiNo"," SSI patients and the cost of ICP)is","output$newTotalCost","EGP","Thus, the median savings may be","output$saving","EGP. In","output$savingPercentage","of the runs, the hospital saves from","min(output$savingPositive)","to","max(output$savingPositive", "due to the implementation of the ICP")
})
output$text3<- renderText({
paste("On the other hand, in","100-outpot$savingPercentage", "of the runs, the hosptial may loose from","-1*max(output$savingNegative)","to","-1*min(output$savingNegative")
})
}
shinyApp(ui = ui, server = server)
shiny::runApp('E:/Courses/Courses taken/specialization/Developing data products/App-1/App-2')
library(shiny)
library(actuar)
library(rCharts)
shiny::runApp('E:/Courses/Courses taken/specialization/Developing data products/Project/app')
shiny::runApp('E:/Courses/Courses taken/specialization/Developing data products/Project/app')
shiny::runApp('E:/Courses/Courses taken/specialization/Developing data products/Project/app')
shiny::runApp('E:/Courses/Courses taken/specialization/Developing data products/Project/app')
shiny::runApp('E:/Courses/Courses taken/specialization/Developing data products/Project/app')
shiny::runApp('E:/Courses/Courses taken/specialization/Developing data products/Project/app')
setwd("E:/Courses/Courses taken/specialization/Developing data products/Project/slidify/costSsi")
library(slidify)
publish(title = 'Costing of Surgical Site Infection', 'index.html', host = 'rpubs')
publish(title = 'Costing of Surgical Site Infection', 'index.html', host = 'rpubs')
library(RCurl)
publish(title = 'Costing of Surgical Site Infection', 'index.html', host = 'rpubs')
?publish
publish_rpubs(Costing of Surgical Site Infection , html_file = "index.html")
publish_rpubs("Costing of Surgical Site Infection" , html_file = "index.html")
slidify("index.Rmd")
borwseURL("index.html")
library(knitr)
borwseURL("index.html")
browseURL("index.html")
publish_rpubs("Costing of Surgical Site Infection ", html_file = "index.html")
publish
publish_rpubs("Costing of Surgical Site Infection ")
.libPaths
.libPaths( "c:/R/packages")
publish_rpubs("Costing of Surgical Site Infection ")
find.package("RCurl")
find.package("RCurl")
library("RCurl")
find.package("RCurl")
publish_rpubs("Costing of Surgical Site Infection ")
